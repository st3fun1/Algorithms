var isPP = function(n){

  for(var i=1;i<=n;i++){
        for(var j=2;j<=n;j++){
          if(Math.pow(i,j) == n){
            return [i,j];
          }
     }
  }
  return null;
 
}


function generateHashtag (str) {
    var nstr = '#'+str.split(' ').map((x)=>x.slice(0,1).toUpperCase()+x.slice(1)).join('');
    return str == '' || nstr.length > 140 ? false : nstr;
}


Array helpers

// TODO

Array.prototype.square = function(){
   return this.map((x)=>Math.pow(x,2));
}

Array.prototype.cube = function(){
   return this.map((x)=>Math.pow(x,3));
}

Array.prototype.average = function(){
   var arrLen = this.length;
   if( arrLen == 0) return NaN;
   else return this.reduce((a,b)=> a+b,0)/arrLen;
}

Array.prototype.sum = function(){
   return this.reduce((a,b)=>a+b,0);
}

Array.prototype.even = function(){
   return this.filter((x)=>x%2 == 0);
}

Array.prototype.odd = function(){
   return this.filter((x)=>x%2 == 1);
}



//Counting duplicates

function duplicateCount(text){
  //...
  var a = text.toLowerCase().split('');
  var count = 0;
  var b = [];
  for(var i=0;i<a.length;i++){
     for(var j=i+1;j<a.length;j++){
        if(b.indexOf(a[i]) > - 1) continue;
        if(a[i] == a[j]){
          b.push(a[i]);
          count++;
        }
     }
  }
  return count;
}

