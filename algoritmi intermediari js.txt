suma tuturor numerelor intr-un interval

function sumAll(arr) {
  var newArr = [];
  for(var i=Math.min.apply(Math, arr);i<=Math.max.apply(Math, arr);i++){
    newArr.push(i);
  }
  return newArr.reduce(function(a,b){
    return a+b;
  });
}

sumAll([1, 4]);


//suma tuturor numerelor prime
function isPrime(num){
  var numIsPrime = true;
  
  for( var j=2;j<=Math.sqrt(num);j++){
    
      if(num%j === 0 ){
        numIsPrime = false;
      }
   }
  
  return numIsPrime;
}

function sumPrimes(num) {
  var sum = 0;
  
   for(var i=2;i<=num;i++){
     
     if(isPrime(i) === true){
       sum += i;
     }
   }
  
   return sum;
}

sumPrimes(10);

//tabla de sah
var size = promt();
var str = "";
for(var i=1;i<=size;i++){
  for(var j=1;j<=size;j++){
    var sum = 0;
    sum += i+j;
    if(sum%2===0){
     str +="#";
    }else{
     str +=" ";
    }
 }
     str += "\n";
}
// schimba prima litera de la fiecare cuvant din string in litera mare
function titleCase(str) {
  var array = str.toLowerCase().split(" ");
  for(var i = 0; i<array.length;i++){
     array[i] = array[i].charAt(0).toUpperCase() + array[i].substr(1);     
  }
      return (str = array.join(" "));   
}

titleCase("I'm a little tea pot");


// verifica un sir target cu alt sir
function end(str, target) {
  // "Never give up and good luck will find you."
  // -- Falcor
    return str.substr(str.length-target.length, str.length) === target.substr(0,target.length);
}

end("Bastian", "n");


function end(str, target) {
  // "Never give up and good luck will find you."
  // -- Falcor
    
  // First Attempt
  /*
  strFound = true;
  if ( target.length > str.length) {
    return strFound;
  }
  steps = target.length;
  for (i=str.length-1, j=target.length-1; 
        j >= 0; i--, j--) {
    if ( str[i] != target[j]) {
      strFound = false;
    }
  }
  
    return strFound;
  */
  
  // Second Attempt
  // use target.length in substring to str to determine if target is within str
  /*
  if (str.substr(-target.length) === target ) {
    return true;
  }
  return false;
  */
  
  // Third Attempt
  return str.endsWith(target);
 
   

}

end("Bastian", "n");

//repeta un string un anumit numar de ori(num)
function repeat(str, num) {
  // repeat after me
  if(num <0){
    return "";
  }else{
    return str.repeat(num);
  }
}

repeat("abc", 3);


function factorialize(num) {
  var factorial = 1;
  if(num === 0 ){
    return 1;
  }else{
    for(var i=1; i<=num;i++){
     factorial *= i;
    }
  }
  return factorial;
  
}

factorialize(5);



function palindrome(str) {
  // Good luck!
  str = str.toLowerCase().replace(/[^a-zA-Z0-9]/g,'');
  var array = [];
  array = str.split('');
  var newStr = array.reverse().join('');
  return str === newStr;
}

palindrome("eye");




function findLongestWord(str) {
  var highestLength = "";
  var array = [];
  array = str.split(" ");
  for(var i = 0 ;i < array.length;i++){
      if(array[i].length > highestLength.length){
        highestLength = array[i];
      }
  }
  str = highestLength;
  return str.length;
}

findLongestWord("The quick brown fox jumped over the lazy dog");


function largestOfFour(arr) {
  // You can do this!
  for(var i = 0; i<arr.length;i++){
       arr[i] = arr[i].sort(function(a,b){
         return a-b;
       }).pop();
       
  }
      return arr;
}

largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);



function truncate(str, num) {
  // Clear out that junk in your trunk
    if(str.length > num && num>3){
      return str.slice(0,num-3) + "...";
    }else if(num<=3){
        return str.slice(0,num) + "...";
    }else if(num>=str.length){
        return str;
    }
  }
  

truncate("A-tisket a-tasket A green and yellow basket", 11);


// gaseste literele dintr-un string in altul
function mutation(arr) {
  var string1 = arr[0].toLowerCase().split('');
  var string2 = arr[1].toLowerCase().split('');
 for(var i=0;i<string1.length;i++){
   for(var j=0;j<string2.length;j++){
     if(string1.indexOf(string2[j]) < 0 ){
          return false;
     } 
   }
 }
  return true;
   
}

mutation(["floor", "for"]);

function palindrome(str) {
  // Good luck!
  var array  = [];
  array = str.replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi,"").toLowerCase().split("");
  var newStr = array.reverse().join("");
  if(str === newStr){
    return true;
  }else{
    return false;
  }
  
}

palindrome("eye");


http://programming-motherfucker.com/become.html